INSERT INTO DAILY_KOSP (CCODE,DDATE,STARTPRICE,HIGHPRICE,LOWPRICE,ENDPRICE,GURAE)
SELECT CCODE,DDATE,STARTPRICE,HIGHPRICE,LOWPRICE,ENDPRICE,GURAE FROM DAILYPRICE_KOSP where ddate ='20160516'  ORDER BY CCODE, DDATE

INSERT INTO DAILY_KOSD (CCODE,DDATE,STARTPRICE,HIGHPRICE,LOWPRICE,ENDPRICE,GURAE)
SELECT CCODE,DDATE,STARTPRICE,HIGHPRICE,LOWPRICE,ENDPRICE,GURAE FROM DAILYPRICE_KOSD where ddate ='20160513'  ORDER BY CCODE, DDATE

SELECT (SELECT COMPANY FROM MAIN_COMP WHERE CCODE =A.CCODE), A.CCODE,  A.ENDPRICE, B.ENDPRICE, 
ROUND((A.ENDPRICE - B.ENDPRICE)/A.ENDPRICE * 100,2)
FROM DAILY_KOSP A INNER JOIN 
(select CCODE, ENDPRICE from DAILY_KOSP 
WHERE DDATE='20160125' AND  DAY10 < DAY5 AND STOK3 > STOD3 AND STOK3 < 50) B
ON(A.CCODE=B.CCODE) WHERE DDATE='20160125'


SELECT (SELECT COMPANY FROM MAIN_COMP WHERE CCODE =A.CCODE), A.CCODE,  A.ENDPRICE, B.ENDPRICE,
ROUND((A.ENDPRICE - B.ENDPRICE)/A.ENDPRICE * 100,2)
FROM DAILY_KOSp A 
INNER JOIN (select CCODE,DDATE, ENDPRICE from DAILY_KOSp WHERE  DAY10 < DAY5 AND DAY5 < ENDPRICE AND STOK3 > STOD3) B
ON(A.CCODE=B.CCODE AND A.DDATE=B.DDATE) 
INNER JOIN (SELECT row_number() OVER (PARTITION BY CCODE ORDER BY DDATE DESC) AS ROW,CCODE,DDATE, 
AVG(DAY5) OVER(PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS AVG_DAY5, 
AVG(DAY10) OVER(PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS AVG_ADAY10
FROM DAILY_KOSp WHERE DDATE <='20160513') C
ON(B.CCODE=C.CCODE AND B.DDATE=C.DDATE)
WHERE A.DDATE='20160513' and C.ROW < 3 AND C.AVG_DAY5 < C.AVG_ADAY10


SELECT (SELECT COMPANY FROM MAIN_COMP WHERE CCODE =A.CCODE), A.CCODE,  A.ENDPRICE, B.ENDPRICE,
ROUND((A.ENDPRICE - B.ENDPRICE)/A.ENDPRICE * 100,2)
FROM DAILY_KOSd A 
INNER JOIN (select CCODE,DDATE, ENDPRICE from DAILY_KOSd WHERE  DAY10 < DAY5 AND DAY5 < ENDPRICE AND STOK3 > STOD3) B
ON(A.CCODE=B.CCODE AND A.DDATE=B.DDATE) 
INNER JOIN (SELECT row_number() OVER (PARTITION BY CCODE ORDER BY DDATE DESC) AS ROW,CCODE,DDATE, 
AVG(DAY5) OVER(PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS AVG_DAY5, 
AVG(DAY10) OVER(PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS AVG_ADAY10
FROM DAILY_KOSd WHERE DDATE <='20160513') C
ON(B.CCODE=C.CCODE AND B.DDATE=C.DDATE)
WHERE A.DDATE='20160513' and C.ROW < 3 AND C.AVG_DAY5 < C.AVG_ADAY10

SELECT (SELECT COMPANY FROM MAIN_COMP WHERE CCODE =A.CCODE) AS COMPANY, A.CCODE AS CCODE 
FROM DAILY_KOSP A INNER JOIN (select CCODE,DDATE, ENDPRICE from DAILY_KOSP  WHERE  DAY10 <= DAY5 AND DAY5 <= ENDPRICE AND STOK3 > STOD3) B  
ON(A.CCODE=B.CCODE AND A.DDATE=B.DDATE) INNER JOIN (SELECT row_number() OVER (PARTITION BY CCODE ORDER BY DDATE DESC) AS ROW,
CCODE,DDATE, AVG(DAY5) OVER(PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 2 FOLLOWING) AS AVG_DAY5,  
AVG(DAY10) OVER(PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 2 FOLLOWING) AS AVG_ADAY10  
FROM DAILY_KOSP WHERE DDATE <='20160330') C ON(B.CCODE=C.CCODE AND B.DDATE=C.DDATE) 
 WHERE A.DDATE='20160330' and C.ROW <= 3 AND C.AVG_DAY5 <= C.AVG_ADAY10 AND A.CCODE='019180';


SELECT (SELECT COMPANY FROM MAIN_COMP WHERE CCODE =A.CCODE) AS COMPANY, A.CCODE AS CCODE 
FROM DAILY_KOSP A INNER JOIN (select CCODE,DDATE, ENDPRICE from DAILY_KOSP  WHERE  DAY10 <= DAY5 AND DAY5 <= ENDPRICE AND STOK3 > STOD3) B  
ON(A.CCODE=B.CCODE AND A.DDATE=B.DDATE) INNER JOIN (SELECT row_number() OVER (PARTITION BY CCODE ORDER BY DDATE DESC) AS ROW,
CCODE,DDATE, AVG(DAY5) OVER(PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 2 FOLLOWING) AS AVG_DAY5,  
AVG(DAY10) OVER(PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 2 FOLLOWING) AS AVG_ADAY10  
FROM DAILY_KOSP WHERE DDATE <='20160330') C ON(B.CCODE=C.CCODE AND B.DDATE=C.DDATE) 
 WHERE A.DDATE='20160330' and C.ROW <= 3 AND C.AVG_DAY5 <= C.AVG_ADAY10 AND A.CCODE='019180';

SELECT TOP 3 row_number() OVER (PARTITION BY CCODE ORDER BY DDATE DESC) AS ROW,CCODE,DDATE, DAY5, DAY10, DAY20, 
AVG(DAY5) OVER(PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 3 FOLLOWING) AS AVG_DAY5,  
AVG(DAY10) OVER(PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 3 FOLLOWING) AS AVG_ADAY10  
FROM DAILY_KOSp WHERE DDATE <='20160331' AND CCODE='031820';

SELECT 
AVG(DAY5) OVER(PARTITION BY CCODE,DDATE ORDER BY CCODE,DDATE DESC ROWS BETWEEN CURRENT ROW AND 3 FOLLOWING) AS AVG_DAY5
FROM DAILY_KOSp WHERE DDATE <='20160331' AND CCODE='031820' GROUP BY CCODE,DDATE,DAY5;

AVG(DAY5) OVER(PARTITION BY CCODE,DDATE ORDER BY CCODE,DDATE DESC ROWS BETWEEN CURRENT ROW AND 3 FOLLOWING) AS AVG_DAY5,  
AVG(DAY10) OVER(PARTITION BY CCODE,DDATE ORDER BY CCODE,DDATE DESC ROWS BETWEEN CURRENT ROW AND 3 FOLLOWING) AS AVG_ADAY10  

SELECT (SELECT COMPANY FROM MAIN_COMP WHERE CCODE =A.CCODE) AS COMPANY, A.CCODE AS CCODE 
FROM DAILY_KOSP A INNER JOIN (select CCODE,DDATE, ENDPRICE from DAILY_KOSP  WHERE  DAY10 <= DAY5 AND DAY5 <= ENDPRICE AND STOK3 > STOD3) B  
ON(A.CCODE=B.CCODE AND A.DDATE=B.DDATE) INNER JOIN (SELECT
CCODE,DDATE, AVG(DAY5) OVER(PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 2 FOLLOWING) AS AVG_DAY5,  
AVG(DAY10) OVER(PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 2 FOLLOWING) AS AVG_ADAY10  
FROM DAILY_KOSP WHERE DDATE <='20160330') C ON(B.CCODE=C.CCODE AND B.DDATE=C.DDATE) 
 WHERE A.DDATE='20160330' AND C.AVG_DAY5 <= C.AVG_ADAY10 AND A.CCODE='019180';



UPDATE DAILY_KOSP SET AVGDAY5 =B.AVG_DAY5, AVGDAY10 =B.AVG_DAY10 FROM DAILY_KOSP A 
JOIN (SELECT CCODE,DDATE, AVG(DAY5) OVER(PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 3 FOLLOWING) AS AVG_DAY5,  
AVG(DAY10) OVER(PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS AVG_DAY10 FROM DAILY_KOSP) B 
ON (A.CCODE=B.CCODE AND A.DDATE=B.DDATE);

UPDATE DAILY_KOSD SET AVGDAY5 =B.AVG_DAY5, AVGDAY10 =B.AVG_DAY10 FROM DAILY_KOSD A 
JOIN (SELECT CCODE,DDATE, AVG(DAY5) OVER(PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 3 FOLLOWING) AS AVG_DAY5,  
AVG(DAY10) OVER(PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS AVG_DAY10 FROM DAILY_KOSD) B 
ON (A.CCODE=B.CCODE AND A.DDATE=B.DDATE); 



UPDATE DAILY_KOSP SET SMAX =B.SMAX, SMIN =B.SMIN FROM DAILY_KOSP A 
JOIN (SELECT CCODE,DDATE, MAX(HIGHPRICE) OVER(PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 240 FOLLOWING) AS SMAX,  
MIN(LOWPRICE) OVER(PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 240 FOLLOWING) AS SMIN FROM DAILY_KOSP) B 
ON (A.CCODE=B.CCODE AND A.DDATE=B.DDATE);

UPDATE DAILY_KOSD SET SMAX =B.SMAX, SMIN =B.SMIN FROM DAILY_KOSD A 
JOIN (SELECT CCODE,DDATE, MAX(HIGHPRICE) OVER(PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 240 FOLLOWING) AS SMAX,  
MIN(LOWPRICE) OVER(PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 240 FOLLOWING) AS SMIN FROM DAILY_KOSD) B 
ON (A.CCODE=B.CCODE AND A.DDATE=B.DDATE);

UPDATE DAILY_KOSP SET VSTDEV =B.VSTDEV FROM DAILY_KOSP A 
JOIN (SELECT CCODE,DDATE, STDEV(ROUND((HIGHPRICE-LOWPRICE)*100 / DAY5,2)) OVER(PARTITION BY CCODE ORDER BY DDATE DESC ROWS 
BETWEEN CURRENT ROW AND 20 FOLLOWING) AS VSTDEV FROM DAILY_KOSP) B 
ON (A.CCODE=B.CCODE AND A.DDATE=B.DDATE);


UPDATE DAILY_KOSD SET VSTDEV =B.VSTDEV FROM DAILY_KOSD A 
JOIN (SELECT CCODE,DDATE, STDEV(ROUND((HIGHPRICE-LOWPRICE)*100 / DAY5,2)) OVER(PARTITION BY CCODE ORDER BY DDATE DESC ROWS 
BETWEEN CURRENT ROW AND 20 FOLLOWING) AS VSTDEV FROM DAILY_KOSD) B 
ON (A.CCODE=B.CCODE AND A.DDATE=B.DDATE);



UPDATE DAILY_KOSP SET PREV20DAY5 =Y.ADAY5 FROM DAILY_KOSP X
JOIN (SELECT B.CCODE AS ACCODE,B.DDATE AS ADDATE, A.DAY5 AS ADAY5  FROM DAILY_KOSP A 
INNER JOIN (SELECT CCODE,DDATE,DAY5, MIN(DDATE) OVER(PARTITION BY CCODE ORDER BY DDATE DESC ROWS 
BETWEEN CURRENT ROW AND 20 FOLLOWING) AS MINDAY FROM DAILY_KOSP) B
ON(A.CCODE=B.CCODE AND A.DDATE = B.MINDAY)) Y
ON (X.CCODE=Y.ACCODE AND X.DDATE=Y.ADDATE);

UPDATE DAILY_KOSD SET PREV20DAY5 =Y.ADAY5 FROM DAILY_KOSD X
JOIN (SELECT B.CCODE AS ACCODE,B.DDATE AS ADDATE, A.DAY5 AS ADAY5  FROM DAILY_KOSD A 
INNER JOIN (SELECT CCODE,DDATE,DAY5, MIN(DDATE) OVER(PARTITION BY CCODE ORDER BY DDATE DESC ROWS 
BETWEEN CURRENT ROW AND 20 FOLLOWING) AS MINDAY FROM DAILY_KOSD) B
ON(A.CCODE=B.CCODE AND A.DDATE = B.MINDAY)) Y
ON (X.CCODE=Y.ACCODE AND X.DDATE=Y.ADDATE);



UPDATE DAILY_KOSP SET AVGDAY5 =B.AVG_DAY5, AVGDAY10 =B.AVG_DAY10 FROM DAILY_KOSP A 
JOIN (SELECT CCODE,DDATE, 
LEAD (DAY5, 1, 0)  OVER(PARTITION BY CCODE ORDER BY DDATE DESC) AS AVG_DAY5,  
LEAD (DAY10, 1, 0) OVER(PARTITION BY CCODE ORDER BY DDATE DESC) AS AVG_DAY10 FROM DAILY_KOSP) B 
ON (A.CCODE=B.CCODE AND A.DDATE=B.DDATE);

UPDATE DAILY_KOSD SET AVGDAY5 =B.AVG_DAY5, AVGDAY10 =B.AVG_DAY10 FROM DAILY_KOSD A 
JOIN (SELECT CCODE,DDATE, 
LEAD (DAY5, 1, 0)  OVER(PARTITION BY CCODE ORDER BY DDATE DESC) AS AVG_DAY5,  
LEAD (DAY10, 1, 0) OVER(PARTITION BY CCODE ORDER BY DDATE DESC) AS AVG_DAY10 FROM DAILY_KOSD) B 
ON (A.CCODE=B.CCODE AND A.DDATE=B.DDATE); 



UPDATE DAILY_KOSP SET DAY20UP =B.DAY20UPX FROM DAILY_KOSP A 
JOIN (SELECT CCODE,DDATE, 
LEAD (DAY20, 1, 0) OVER(PARTITION BY CCODE ORDER BY DDATE DESC)
-LEAD (DAY5, 1, 0)  OVER(PARTITION BY CCODE ORDER BY DDATE DESC) AS DAY20UPX FROM DAILY_KOSP) B 
ON (A.CCODE=B.CCODE AND A.DDATE=B.DDATE);

UPDATE DAILY_KOSD SET DAY20UP =B.DAY20UPX FROM DAILY_KOSD A 
JOIN (SELECT CCODE,DDATE, 
LEAD (DAY20, 1, 0) OVER(PARTITION BY CCODE ORDER BY DDATE DESC)
-LEAD (DAY5, 1, 0)  OVER(PARTITION BY CCODE ORDER BY DDATE DESC) AS DAY20UPX FROM DAILY_KOSD) B 
ON (A.CCODE=B.CCODE AND A.DDATE=B.DDATE);


UPDATE DAILY_KOSP SET DAYGAP =B.DGAP FROM DAILY_KOSP A 
JOIN (SELECT CCODE,DDATE, 
ENDPRICE
-LEAD (ENDPRICE, 1, 0)  OVER(PARTITION BY CCODE ORDER BY DDATE DESC) AS DGAP FROM DAILY_KOSP) B 
ON (A.CCODE=B.CCODE AND A.DDATE=B.DDATE);

UPDATE DAILY_KOSD SET DAYGAP =B.DGAP  FROM DAILY_KOSD A 
JOIN (SELECT CCODE,DDATE, 
ENDPRICE
-LEAD (ENDPRICE, 1, 0)  OVER(PARTITION BY CCODE ORDER BY DDATE DESC) AS DGAP FROM DAILY_KOSD) B 
ON (A.CCODE=B.CCODE AND A.DDATE=B.DDATE);



UPDATE DAILY_KOSP SET TENDAYSUM =B.DAYSUM, TENDAYCOUNT=B.DAYCOUNT FROM DAILY_KOSP A 
JOIN (SELECT CCODE,DDATE,SUM(DAYGAP) OVER (PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 9 FOLLOWING) 
AS DAYSUM,
SUM(CASE WHEN DAYGAP>=0 THEN 1 ELSE 0 END) OVER (PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 9 FOLLOWING) 
AS DAYCOUNT
FROM DAILY_KOSP) B ON (A.CCODE=B.CCODE AND A.DDATE=B.DDATE);

UPDATE DAILY_KOSD SET TENDAYSUM =B.DAYSUM, TENDAYCOUNT=B.DAYCOUNT FROM DAILY_KOSD A 
JOIN (SELECT CCODE,DDATE,SUM(DAYGAP) OVER (PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 9 FOLLOWING) 
AS DAYSUM,
SUM(CASE WHEN DAYGAP>=0 THEN 1 ELSE 0 END) OVER (PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 9 FOLLOWING) 
AS DAYCOUNT
FROM DAILY_KOSD) B ON (A.CCODE=B.CCODE AND A.DDATE=B.DDATE)

UPDATE DAILY_KOSP SET DAY20SUM =B.DAYSUM, DAY20COUNT=B.DAYCOUNT FROM DAILY_KOSP A 
JOIN (SELECT CCODE,DDATE,SUM(DAYGAP) OVER (PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 19 FOLLOWING) 
AS DAYSUM,
SUM(CASE WHEN DAYGAP > 0 THEN 1 WHEN DAYGAP =0 THEN 0.4 ELSE 0 END) OVER (PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 19 FOLLOWING) 
AS DAYCOUNT
FROM DAILY_KOSP) B ON (A.CCODE=B.CCODE AND A.DDATE=B.DDATE);

UPDATE DAILY_KOSD SET DAY20SUM =B.DAYSUM, DAY20COUNT=B.DAYCOUNT FROM DAILY_KOSD A 
JOIN (SELECT CCODE,DDATE,SUM(DAYGAP) OVER (PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 19 FOLLOWING) 
AS DAYSUM,
SUM(CASE WHEN DAYGAP > 0 THEN 1 WHEN DAYGAP =0 THEN 0.4 ELSE 0 END) OVER (PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 19 FOLLOWING) 
AS DAYCOUNT
FROM DAILY_KOSD) B ON (A.CCODE=B.CCODE AND A.DDATE=B.DDATE)


UPDATE DAILY_KOSP SET DAY40SUM =B.DAYSUM, DAY40COUNT=B.DAYCOUNT FROM DAILY_KOSP A 
JOIN (SELECT CCODE,DDATE,SUM(DAYGAP) OVER (PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 39 FOLLOWING) 
AS DAYSUM,
SUM(CASE WHEN DAYGAP>=0 THEN 1 ELSE 0 END) OVER (PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 39 FOLLOWING) 
AS DAYCOUNT
FROM DAILY_KOSP) B ON (A.CCODE=B.CCODE AND A.DDATE=B.DDATE);

UPDATE DAILY_KOSD SET DAY40SUM =B.DAYSUM, DAY40COUNT=B.DAYCOUNT FROM DAILY_KOSD A 
JOIN (SELECT CCODE,DDATE,SUM(DAYGAP) OVER (PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 39 FOLLOWING) 
AS DAYSUM,
SUM(CASE WHEN DAYGAP>=0 THEN 1 ELSE 0 END) OVER (PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 39 FOLLOWING) 
AS DAYCOUNT
FROM DAILY_KOSD) B ON (A.CCODE=B.CCODE AND A.DDATE=B.DDATE)

UPDATE DAILY_KOSP SET DAY60SUM =B.DAYSUM, DAY60COUNT=B.DAYCOUNT FROM DAILY_KOSP A 
JOIN (SELECT CCODE,DDATE,SUM(DAYGAP) OVER (PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 59 FOLLOWING) 
AS DAYSUM,
SUM(CASE WHEN DAYGAP>=0 THEN 1 ELSE 0 END) OVER (PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 59 FOLLOWING) 
AS DAYCOUNT
FROM DAILY_KOSP) B ON (A.CCODE=B.CCODE AND A.DDATE=B.DDATE);

UPDATE DAILY_KOSD SET DAY60SUM =B.DAYSUM, DAY60COUNT=B.DAYCOUNT FROM DAILY_KOSD A 
JOIN (SELECT CCODE,DDATE,SUM(DAYGAP) OVER (PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 59 FOLLOWING) 
AS DAYSUM,
SUM(CASE WHEN DAYGAP>=0 THEN 1 ELSE 0 END) OVER (PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 59 FOLLOWING) 
AS DAYCOUNT
FROM DAILY_KOSD) B ON (A.CCODE=B.CCODE AND A.DDATE=B.DDATE)


UPDATE DAILY_KOSD SET GURAESTDEV = C.GURAESTDEV FROM DAILY_KOSP A 
JOIN (SELECT B.CCODE AS BCCODE, B.DDATE AS BDDATE, STDEV(COALESCE(ROUND(B.GURAE * 100 /NULLIF(B.GAVG,0),2),0)) OVER(PARTITION BY B.CCODE ORDER BY B.DDATE DESC ROWS 
BETWEEN CURRENT ROW AND 20 FOLLOWING) AS GURAESTDEV
FROM (SELECT CCODE,DDATE, GURAE, AVG(GURAE) OVER(PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 60 FOLLOWING) AS GAVG
FROM DAILY_KOSP) B) C ON (A.CCODE=C.BCCODE AND A.DDATE= C.BDDATE)


UPDATE DAILY_KOSD SET GURAESTDEV = C.GURAESTDEV FROM DAILY_KOSD A 
JOIN (SELECT B.CCODE AS BCCODE, B.DDATE AS BDDATE, STDEV(COALESCE(ROUND(B.GURAE * 100 /NULLIF(B.GAVG,0),2),0)) OVER(PARTITION BY B.CCODE ORDER BY B.DDATE DESC ROWS 
BETWEEN CURRENT ROW AND 20 FOLLOWING) AS GURAESTDEV
FROM (SELECT CCODE,DDATE, GURAE, AVG(GURAE) OVER(PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 60 FOLLOWING) AS GAVG
FROM DAILY_KOSD) B) C ON (A.CCODE=C.BCCODE AND A.DDATE= C.BDDATE)



SELECT A.CCODE, A.DDATE, GMAX, STDEV(ROUND(A.GURAE * 100 /A.GAVG,2)) OVER(PARTITION BY A.CCODE ORDER BY A.DDATE DESC ROWS 
BETWEEN CURRENT ROW AND 20 FOLLOWING) AS SSTDEV, (STDEV(ROUND(A.GURAE * 100 /A.GAVG,2)) OVER(PARTITION BY A.CCODE ORDER BY A.DDATE DESC ROWS 
BETWEEN CURRENT ROW AND 20 FOLLOWING) * 100000) / A.GMAX
FROM ( 
SELECT CCODE,DDATE, GURAE,
MAX(GURAE) OVER(PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 60 FOLLOWING) AS GMAX,
AVG(GURAE) OVER(PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 60 FOLLOWING) AS GAVG
FROM DAILY_KOSD WHERE CCODE ='105330') A


UPDATE DAILY_KOSP SET MAX240 =B.MAX240, MIN240 =B.MIN240 FROM DAILY_KOSP A 
JOIN (SELECT CCODE,DDATE, MAX(ENDPRICE) OVER(PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 240 FOLLOWING) AS MAX240,  
MIN(ENDPRICE) OVER(PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 240 FOLLOWING) AS MIN240 FROM DAILY_KOSP) B 
ON (A.CCODE=B.CCODE AND A.DDATE=B.DDATE);

UPDATE DAILY_KOSD SET MAX240 =B.MAX240, MIN240 =B.MIN240 FROM DAILY_KOSD A 
JOIN (SELECT CCODE,DDATE, MAX(ENDPRICE) OVER(PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 240 FOLLOWING) AS MAX240,  
MIN(ENDPRICE) OVER(PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 240 FOLLOWING) AS MIN240 FROM DAILY_KOSD) B 
ON (A.CCODE=B.CCODE AND A.DDATE=B.DDATE);

UPDATE DAILY_KOSP SET GURAE20 =B.GURAE20, GURAE40 =B.GURAE40 FROM DAILY_KOSP A 
JOIN (SELECT CCODE, DDATE, ROUND((SUM(GURAE) OVER(PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 20 FOLLOWING) - GURAE)/20,0) AS GURAE20,  
ROUND((SUM(GURAE) OVER(PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 40 FOLLOWING) - GURAE)/40,0) AS GURAE40 FROM DAILY_KOSP) B 
ON (A.CCODE=B.CCODE AND A.DDATE=B.DDATE)


UPDATE DAILY_KOSD SET GURAE20 =B.GURAE20, GURAE40 =B.GURAE40 FROM DAILY_KOSD A 
JOIN (SELECT CCODE, DDATE, ROUND((SUM(GURAE) OVER(PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 20 FOLLOWING) - GURAE)/20,0) AS GURAE20,  
ROUND((SUM(GURAE) OVER(PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 40 FOLLOWING) - GURAE)/40,0) AS GURAE40 FROM DAILY_KOSD) B 
ON (A.CCODE=B.CCODE AND A.DDATE=B.DDATE)


SELECT * FROM DAILY_KOSP A WHERE A.CCODE='010140' AND A.DDATE ='20170112'
SELECT TOP 20 * FROM DAILY_KOSP A WHERE A.CCODE='010140' AND A.DDATE < '20170111' ORDER BY DDATE DESC

SELECT CCODE, DDATE,GURAE, (SUM(GURAE) OVER(PARTITION BY CCODE ORDER BY DDATE DESC ROWS BETWEEN CURRENT ROW AND 21 FOLLOWING) - GURAE) AS GURAE20  
FROM DAILY_KOSP A WHERE A.CCODE='010140' AND A.DDATE <='20170111'

select B.company, A.DDATE, ROUND(A.GURAE20/(B.TotalStock*10),2) 
from [dbo].[DAILY_KOSD] A inner join Main_Comp B on(A.ccode=b.ccode) where A.ccode='147830' order by ddate desc


UPDATE DAILY_KOSP SET 
PREUPDOWN1 = ISNULL(ROUND(((B.PREGAP1)/nullif(B.PREPRICE1-B.PREGAP1,0)) * 100,2),0), 
PREUPDOWN2 = ISNULL(ROUND(((B.PREGAP2)/nullif(B.PREPRICE2-B.PREGAP2,0)) * 100,2),0)  FROM DAILY_KOSP A 
JOIN (SELECT CCODE,DDATE, 
LEAD (ENDPRICE, 1, 0)  OVER(PARTITION BY CCODE ORDER BY DDATE DESC) AS PREPRICE1,
LEAD(DAYGAP, 1, 0)  OVER(PARTITION BY CCODE ORDER BY DDATE DESC) AS PREGAP1,
LEAD (ENDPRICE, 1, 0)  OVER(PARTITION BY CCODE ORDER BY DDATE DESC) AS PREPRICE2,
LEAD(DAYGAP, 1, 0)  OVER(PARTITION BY CCODE ORDER BY DDATE DESC) AS PREGAP2
FROM DAILY_KOSP) B 
ON (A.CCODE=B.CCODE AND A.DDATE=B.DDATE);

UPDATE DAILY_KOSD SET 
PREUPDOWN1 = ISNULL(ROUND(((B.PREGAP1)/nullif(B.PREPRICE1-B.PREGAP1,0)) * 100,2),0), 
PREUPDOWN2 = ISNULL(ROUND(((B.PREGAP2)/nullif(B.PREPRICE2-B.PREGAP2,0)) * 100,2),0)  FROM DAILY_KOSD A 
JOIN (SELECT CCODE,DDATE, 
LEAD (ENDPRICE, 1, 0)  OVER(PARTITION BY CCODE ORDER BY DDATE DESC) AS PREPRICE1,
LEAD(DAYGAP, 1, 0)  OVER(PARTITION BY CCODE ORDER BY DDATE DESC) AS PREGAP1,
LEAD (ENDPRICE, 1, 0)  OVER(PARTITION BY CCODE ORDER BY DDATE DESC) AS PREPRICE2,
LEAD(DAYGAP, 1, 0)  OVER(PARTITION BY CCODE ORDER BY DDATE DESC) AS PREGAP2
FROM DAILY_KOSD) B 
ON (A.CCODE=B.CCODE AND A.DDATE=B.DDATE);









